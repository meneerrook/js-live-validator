const _private={extend:(e,a)=>{let s;for(s in a)a.hasOwnProperty(s)&&(e[s]=a[s]);return e},set:a=>{let s=document.querySelectorAll("[data-live-validator]");for(let l=0;l<s.length;l++){let r=s[l].dataset.liveValidatorEvent||a.event;if(r instanceof Array)for(e=0;e<r.length;e++)s[l].addEventListener(r[e],e=>{_private.prepare(a,e.currentTarget)});else s[l].addEventListener(r,e=>{_private.prepare(a,e.currentTarget)})}},prepare:(e,a)=>{let s=a.querySelector("input, select, textarea"),l=a.dataset.liveValidatorRules||e.rules;_private.specify(e,l,s,a)},specify:(e,a,s,l)=>{var r=[];a=a.split("|");for(let l=0;l<a.length;l++){let i=a[l].split(":"),t={};switch(t.name=i[0],t.msg=e.msg.success,t.name){case"required":t.valid=_private.validate.required(i,s),t.msg=t.valid?t.msg:e.msg.danger.required;break;case"alpha":t.valid=_private.validate.alpha(i,s),t.msg=t.valid?t.msg:e.msg.danger.alpha;break;case"alpha_num":t.valid=_private.validate.alpha_num(i,s),t.msg=t.valid?t.msg:e.msg.danger.alpha_num;break;case"alpha_dash":t.valid=_private.validate.alpha_dash(i,s),t.msg=t.valid?t.msg:e.msg.danger.alpha_dash;break;case"email":t.valid=_private.validate.email(i,s),t.msg=t.valid?t.msg:e.msg.danger.email;break;case"min_char":t.valid=_private.validate.min_char(i,s),t.msg=t.valid?t.msg:e.msg.danger.min_char;break;case"max_char":t.valid=_private.validate.max_char(i,s),t.msg=t.valid?t.msg:e.msg.danger.max_char;break;case"size":t.valid=_private.validate.size(i,s),t.msg=t.valid?t.msg:e.msg.danger.size;break;case"equal":t.valid=_private.validate.equal(i,s),t.msg=t.valid?t.msg:e.msg.danger.equal;break;case"is_num":t.valid=_private.validate.is_num(i,s),t.msg=t.valid?t.msg:e.msg.danger.is_num;break;case"min_num":t.valid=_private.validate.min_num(i,s),t.msg=t.valid?t.msg:e.msg.danger.min_num;break;case"max_num":t.valid=_private.validate.max_num(i,s),t.msg=t.valid?t.msg:e.msg.danger.max_num;break;case"one_of":t.valid=_private.validate.one_of(i,s),t.msg=t.valid?t.msg:e.msg.danger.one_of}t.msg=t.msg.replace("{field}",s.name).replace("{param}",i[1]),r.push(t)}_private.respond(e,l,r)},validate:{required:(e,a)=>a.value.length>0,alpha:(e,a)=>{return/^[a-zA-Z ]+$/.test(a.value)},alpha_num:(e,a)=>{return/^[a-zA-Z0-9 ]+$/.test(a.value)},alpha_dash:(e,a)=>{return/^[a-zA-Z0-9-_ ]+$/.test(a.value)},email:(e,a)=>{return/[a-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(a.value)},min_char:(e,a)=>Number(a.value.length)>=Number(e[1]),max_char:(e,a)=>Number(a.value.length)<=Number(e[1]),size:(e,a)=>a.value.length==Number(e[1]),equal:(e,a)=>{let s=document.querySelector("[name='"+e[1]+"']");return a.value==s.value},is_num:(e,a)=>!isNaN(Number(a.value)),min_num:()=>!isNaN(Number(field.value))&&Number(field.value)>=Number(rule[1]),max_num:()=>!isNaN(Number(field.value))&&Number(field.value)<=Number(rule[1]),one_of:(e,a)=>{options=e[1].split(",");for(let e=0;e<options.length;e++)if(a.value==options[e])return!0;return!1}},respond:(e,a,s)=>{let l;s=e.showSuccessMsg?s:s.filter(e=>!e.valid),s=e.showSuccessMsg?s.sort(function(e,a){return e.valid?1:e.valid?0:-1}):s.filter(e=>!e.valid),s=e.showSingleMsg?s[0]:s,(l=a.querySelector("."+e.msgClass))||(l=document.createElement("div")).classList.add(e.msgClass),e.showSingleMsg&&(s?(s.valid?(a.classList.remove(e.msgWrapperClass.danger),a.classList.add(e.msgWrapperClass.success)):(a.classList.remove(e.msgWrapperClass.success),a.classList.add(e.msgWrapperClass.danger)),l.innerText=s.msg,a.appendChild(l)):(a.classList.remove(e.msgWrapperClass.success,e.msgWrapperClass.danger),a.contains(l)&&a.removeChild(l)))},msg:{danger:{required:"The field {field} is required",alpha:"The field {field} must only have alphabetic characters",alpha_num:"The field {field} must only have alphabetic and/or numeric characters",alpha_dash:"The field {field} must only have alphabetic, numeric, dash and/or underscore characters",email:"The field {field} must be an email address",min_char:"The field {field} needs at least {param} characters",max_char:"The field {field} can have no more than {param} characters",size:"The field {field} must have exactly {param} characters",equal:"The field {field} must be equal to the {param} field",is_num:"The field {field} must be numeric",min_num:"The field {field} must be numeric and at least {param}",max_num:"The field {field} must be numeric and a maximum of {param}",one_of:"The field {field} is invalid."},success:"The field {field} is valid.",class:"lv-val-msg",wrapperClass:{danger:"",success:""},showSingle:!0,showSuccess:!0}};class LiveValidator{constructor(e){this.options={event:["keyup","change","focusout"],rules:"required",msg:_private.msg,msgWrapperClass:{danger:"lv-val-danger",success:"lv-val-success"},msgClass:"lv-val-msg",showSingleMsg:!0,showSuccessMsg:!0},arguments[0]&&"object"==typeof arguments[0]&&(this.options=_private.extend(this.options,arguments[0]))}validate(){_private.set(this.options)}}